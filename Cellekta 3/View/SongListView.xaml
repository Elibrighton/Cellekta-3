<Window x:Class="Cellekta_3.View.SongListView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Cellekta_3"
        xmlns:vm="clr-namespace:Cellekta_3.ViewModel"
        mc:Ignorable="d"
        Title="Cellekta" 
        Height="{Binding WindowHeight, Mode=TwoWay}"
        Width="{Binding WindowWidth, Mode=TwoWay}" 
        WindowStartupLocation="Manual"
        Left="25"
        Top="321">
    <Window.DataContext>
        <vm:SongListViewModel />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Grid DockPanel.Dock="Top">
            <Menu>
                <MenuItem Header="_File">
                    <MenuItem Header="_Clear" Command="{Binding ClearMenuCommand}" />
                    <MenuItem Header="_Import" Command="{Binding ImportMenuCommand}" />
                    <MenuItem Header="_Save" />
                    <Separator />
                    <MenuItem Header="_Exit" Command="{Binding ExitMenuCommand}" />
                </MenuItem>
                <MenuItem Header="_Settings">
                    <MenuItem Header="_Tempo range">
                        <MenuItem Header="_3"
                                  IsCheckable="True"
                                  Command="{Binding RangeOfThreeMenuCommand}"
                                  IsChecked="{Binding IsRangeOfThreeMenuChecked}"
                                  IsEnabled="{Binding IsRangeOfThreeMenuEnabled}" />
                        <MenuItem Header="_6"
                                  IsCheckable="True" 
                                  Command="{Binding RangeOfSixMenuCommand}"
                                  IsChecked="{Binding IsRangeOfSixMenuChecked}"
                                  IsEnabled="{Binding IsRangeOfSixMenuEnabled}" />
                        <MenuItem Header="_12"
                                  IsCheckable="True" 
                                  Command="{Binding RangeOfTwelveMenuCommand}"
                                  IsChecked="{Binding IsRangeOfTwelveMenuChecked}"
                                  IsEnabled="{Binding IsRangeOfTwelveMenuEnabled}" />
                    </MenuItem>
                </MenuItem>
            </Menu>
        </Grid>
        <StackPanel VerticalAlignment="Top">
            <TabControl SelectedIndex="{Binding SelectedTabControlIndex}">
                <TabItem Header="Track collection">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding IsMixableRangeCheckboxChecked}"
                                      VerticalAlignment="Center"
                                      Margin="5, 1, 0, 3">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding MixableRangeCheckboxCheckedCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding MixableRangeCheckboxCheckedCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                Mixable range
                            </CheckBox>
                            <TextBlock Text="Tempo" Margin="5, 3, 0, 3" />
                            <DockPanel VerticalAlignment="Center" Margin="5, 1, 0, 3">
                                <Slider Width="300" 
                                        Minimum="65" 
                                        Maximum="165" 
                                        TickPlacement="BottomRight"
                                        TickFrequency="1" 
                                        IsSnapToTickEnabled="True" 
                                        Value="{Binding TempoSliderValue}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <i:InvokeCommandAction Command="{Binding TempoSliderValueCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Slider>
                                <TextBlock Text="{Binding TempoSliderValueText, UpdateSourceTrigger=PropertyChanged}" 
                                    DockPanel.Dock="Right" 
                                    Width="50" 
                                    Margin="5, 3, 0, 3"/>
                            </DockPanel>
                            <TextBlock Text="Harmonic key" Margin="5, 3, 0, 3" />
                            <ComboBox ItemsSource="{Binding HarmonicKeyComboBoxCollection}"  
                                      SelectedItem="{Binding SelectedHarmonicKeyComboBoxItem}"
                                      Margin="5, 1, 0, 3"
                                      MinWidth="75">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding HarmonicKeyComboBoxSelectionChangedCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <Button Command="{Binding ClearButtonCommand}" IsEnabled="{Binding IsClearButtonEnabled}" MinWidth="100" Margin="5, 1, 0, 3">Clear</Button>
                        </StackPanel>
                        <ListView ItemsSource="{Binding FilteredTrackCollection}" 
                                  SelectionMode="Single"
                                  Height="{Binding TrackCollectionListViewHeight, Mode=TwoWay}"
                                  Width="{Binding ListViewWidth, Mode=TwoWay}"
                                  SelectedItem="{Binding SelectedTrackCollectionItem, Mode=TwoWay}">
                            <ListView.View>
                                <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="Song information">
                                    <GridViewColumn DisplayMemberBinding="{Binding Artist}" Header="Artist" Width="200"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Title}" Header="Title" Width="400"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding TempoText}" Header="Tempo" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding HarmonicKeyText}" Header="Key" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Intensity}" Header="Intensity" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Playlist}" Header="Playlist" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding IsChartingText}" Header="Charting" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Rating}" Header="Rating" Width="100"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{Binding LoadButtonCommand}" IsEnabled="{Binding IsLoadButtonEnabled}" MinWidth="100" Margin="0, 3, 5, 1">Load</Button>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Preparation">
                    <StackPanel>
                        <ListView ItemsSource="{Binding PreparationCollection}" 
                                  SelectionMode="Single"
                                  Height="{Binding PreparationListViewHeight, Mode=TwoWay}"
                                  Width="{Binding ListViewWidth, Mode=TwoWay}"
                                  SelectedItem="{Binding SelectedPreparationItem, Mode=TwoWay}">
                            <ListView.View>
                                <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="Song information">
                                    <GridViewColumn DisplayMemberBinding="{Binding Artist}" Header="Artist" Width="200"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Title}" Header="Title" Width="400"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding TempoText}" Header="Tempo" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding HarmonicKeyText}" Header="Key" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Intensity}" Header="Intensity" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Playlist}" Header="Playlist" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding IsChartingText}" Header="Charting" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Rating}" Header="Rating" Width="100"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{Binding AddNextButtonCommand}" IsEnabled="{Binding IsAddNextButtonEnabled}" MinWidth="100" Margin="0, 3, 5, 1">Add next</Button>
                            <Button Command="{Binding DeleteButtonCommand}" IsEnabled="{Binding IsDeleteButtonEnabled}" MinWidth="100" Margin="0, 3, 5, 1">Delete</Button>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
            </TabControl>
            <StatusBar VerticalAlignment="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel></StackPanel>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <Grid>
                        <ProgressBar Height="20" 
                                 Width="{Binding ProgressBarWidth}"
                                 Minimum="0"
                                 Value="{Binding ProgressBarValue, UpdateSourceTrigger=PropertyChanged}"
                                 IsIndeterminate="{Binding IsProgressBarIndeterminate, UpdateSourceTrigger=PropertyChanged}"
                                 Maximum="{Binding ProgressBarMax, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="{Binding ProgressBarMessage}" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center"
                                   Margin="5,0,0,0"/>
                    </Grid>
                </StatusBarItem>
            </StatusBar>
        </StackPanel>
    </DockPanel>
</Window>
